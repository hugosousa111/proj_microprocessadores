

Microchip Technology PIC18 LITE Macro Assembler V1.44 build -154322312 
                                                                                               Sat Nov 18 05:10:04 2017

Microchip Technology Omniscient Code Generator v1.44 (Free mode) build 201709140600
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	nvCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     8                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     9                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
    10                           	psect	text0,global,reloc=2,class=CODE,delta=1
    11                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    12                           	psect	intcode_body,global,reloc=2,class=CODE,delta=1
    13                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    14                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    15                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    16  0000                     
    17                           ; Version 1.44
    18                           ; Generated 14/09/2017 GMT
    19                           ; 
    20                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    21                           ; All rights reserved.
    22                           ; 
    23                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    24                           ; 
    25                           ; Redistribution and use in source and binary forms, with or without modification, are
    26                           ; permitted provided that the following conditions are met:
    27                           ; 
    28                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    29                           ;        conditions and the following disclaimer.
    30                           ; 
    31                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    32                           ;        of conditions and the following disclaimer in the documentation and/or other
    33                           ;        materials provided with the distribution.
    34                           ; 
    35                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    36                           ;        software without specific prior written permission.
    37                           ; 
    38                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    39                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    40                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    41                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    42                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    43                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    44                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    45                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    46                           ; 
    47                           ; 
    48                           ; Code-generator required, PIC18F4550 Definitions
    49                           ; 
    50                           ; SFR Addresses
    51  0000                     
    52                           	psect	smallconst
    53  000800                     __psmallconst:
    54                           	opt stack 0
    55  000800  00                 	db	0
    56  000801                     _bcd2seg:
    57                           	opt stack 0
    58  000801  40                 	db	64
    59  000802  79                 	db	121
    60  000803  24                 	db	36
    61  000804  30                 	db	48
    62  000805  19                 	db	25
    63  000806  12                 	db	18
    64  000807  02                 	db	2
    65  000808  78                 	db	120
    66  000809  00                 	db	0
    67  00080A  10                 	db	16
    68  00080B                     __end_of_bcd2seg:
    69                           	opt stack 0
    70  00080B  00                 	db	0	; dummy byte at the end
    71  0000                     
    72                           	psect	nvCOMRAM
    73  00001D                     __pnvCOMRAM:
    74                           	opt stack 0
    75  00001D                     _disp3:
    76                           	opt stack 0
    77  00001D                     	ds	1
    78  00001E                     _disp2:
    79                           	opt stack 0
    80  00001E                     	ds	1
    81  00001F                     _disp1:
    82                           	opt stack 0
    83  00001F                     	ds	1
    84  0000                     _PORTB	set	3969
    85  0000                     _PORTDbits	set	3971
    86  0000                     _TRISB	set	3987
    87  0000                     _TRISD	set	3989
    88  0000                     _PR2	set	4043
    89  0000                     _T2CONbits	set	4042
    90  0000                     _TMR2IF	set	31985
    91  0000                     _PEIE	set	32662
    92  0000                     _GIE	set	32663
    93  0000                     _TMR2ON	set	32338
    94  0000                     _TMR2IE	set	31977
    95                           
    96                           ; #config settings
    97  0000                     
    98                           	psect	cinit
    99  0009A0                     __pcinit:
   100                           	opt stack 0
   101  0009A0                     start_initialization:
   102                           	opt stack 0
   103  0009A0                     __initialization:
   104                           	opt stack 0
   105                           
   106                           ; Clear objects allocated to COMRAM (8 bytes)
   107  0009A0  EE00  F015         	lfsr	0,__pbssCOMRAM
   108  0009A4  0E08               	movlw	8
   109  0009A6                     clear_0:
   110  0009A6  6AEE               	clrf	postinc0,c
   111  0009A8  06E8               	decf	wreg,f,c
   112  0009AA  E1FD               	bnz	clear_0
   113  0009AC                     end_of_initialization:
   114                           	opt stack 0
   115  0009AC                     __end_of__initialization:
   116                           	opt stack 0
   117  0009AC  9020               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   118  0009AE  9220               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   119  0009B0  0E00               	movlw	low (__Lsmallconst shr (0+16))
   120  0009B2  6EF8               	movwf	tblptru,c
   121  0009B4  0E08               	movlw	high __Lsmallconst
   122  0009B6  6EF7               	movwf	tblptrh,c
   123  0009B8  0100               	movlb	0
   124  0009BA  EF76  F004         	goto	_main	;jump to C main() function
   125                           tblptru	equ	0xFF8
   126                           tblptrh	equ	0xFF7
   127                           postinc0	equ	0xFEE
   128                           wreg	equ	0xFE8
   129                           
   130                           	psect	bssCOMRAM
   131  000015                     __pbssCOMRAM:
   132                           	opt stack 0
   133  000015                     _A:
   134                           	opt stack 0
   135  000015                     	ds	2
   136  000017                     _d3:
   137                           	opt stack 0
   138  000017                     	ds	2
   139  000019                     _d2:
   140                           	opt stack 0
   141  000019                     	ds	2
   142  00001B                     _d1:
   143                           	opt stack 0
   144  00001B                     	ds	2
   145                           tblptru	equ	0xFF8
   146                           tblptrh	equ	0xFF7
   147                           postinc0	equ	0xFEE
   148                           wreg	equ	0xFE8
   149                           
   150                           	psect	cstackCOMRAM
   151  000001                     __pcstackCOMRAM:
   152                           	opt stack 0
   153  000001                     ??_rotina_interrup:
   154                           
   155                           ; 1 bytes @ 0x0
   156  000001                     	ds	18
   157  000013                     ??_main:
   158                           
   159                           ; 1 bytes @ 0x12
   160  000013                     	ds	2
   161                           tblptru	equ	0xFF8
   162                           tblptrh	equ	0xFF7
   163                           postinc0	equ	0xFEE
   164                           wreg	equ	0xFE8
   165                           
   166 ;;
   167 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   168 ;;
   169 ;; *************** function _main *****************
   170 ;; Defined at:
   171 ;;		line 93 in file "newmain.c"
   172 ;; Parameters:    Size  Location     Type
   173 ;;		None
   174 ;; Auto vars:     Size  Location     Type
   175 ;;		None
   176 ;; Return value:  Size  Location     Type
   177 ;;                  1    wreg      void 
   178 ;; Registers used:
   179 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru
   180 ;; Tracked objects:
   181 ;;		On entry : 0/0
   182 ;;		On exit  : 0/0
   183 ;;		Unchanged: 0/0
   184 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   185 ;;      Params:         0       0       0       0       0       0       0       0       0
   186 ;;      Locals:         0       0       0       0       0       0       0       0       0
   187 ;;      Temps:          2       0       0       0       0       0       0       0       0
   188 ;;      Totals:         2       0       0       0       0       0       0       0       0
   189 ;;Total ram usage:        2 bytes
   190 ;; Hardware stack levels required when called:    1
   191 ;; This function calls:
   192 ;;		Nothing
   193 ;; This function is called by:
   194 ;;		Startup code after reset
   195 ;; This function uses a non-reentrant model
   196 ;;
   197                           
   198                           	psect	text0
   199  0008EC                     __ptext0:
   200                           	opt stack 0
   201  0008EC                     _main:
   202                           	opt stack 30
   203                           
   204                           ;newmain.c: 94: T2CONbits.T2CKPS = 0b01;
   205                           
   206                           ;incstack = 0
   207  0008EC  50CA               	movf	4042,w,c	;volatile
   208  0008EE  0BFC               	andlw	-4
   209  0008F0  0901               	iorlw	1
   210  0008F2  6ECA               	movwf	4042,c	;volatile
   211                           
   212                           ;newmain.c: 95: T2CONbits.TOUTPS = 0b0000;
   213  0008F4  96CA               	bcf	4042,3,c	;volatile
   214  0008F6  98CA               	bcf	4042,4,c	;volatile
   215  0008F8  9ACA               	bcf	4042,5,c	;volatile
   216  0008FA  9CCA               	bcf	4042,6,c	;volatile
   217                           
   218                           ;newmain.c: 96: PR2 = 100;
   219  0008FC  0E64               	movlw	100
   220  0008FE  6ECB               	movwf	4043,c	;volatile
   221                           
   222                           ;newmain.c: 97: TMR2IE = 1;
   223  000900  829D               	bsf	3997,1,c	;volatile
   224                           
   225                           ;newmain.c: 98: TMR2ON = 1;
   226  000902  84CA               	bsf	4042,2,c	;volatile
   227                           
   228                           ;newmain.c: 99: TRISD = 0x00;
   229  000904  0E00               	movlw	0
   230  000906  6E95               	movwf	3989,c	;volatile
   231                           
   232                           ;newmain.c: 100: TRISB = 0x00;
   233  000908  0E00               	movlw	0
   234  00090A  6E93               	movwf	3987,c	;volatile
   235                           
   236                           ;newmain.c: 101: GIE = 1;
   237  00090C  8EF2               	bsf	intcon,7,c	;volatile
   238                           
   239                           ;newmain.c: 102: PEIE = 1;
   240  00090E  8CF2               	bsf	intcon,6,c	;volatile
   241  000910                     
   242                           ;newmain.c: 106: disp1 = bcd2seg[d1];
   243  000910  0E01               	movlw	low _bcd2seg
   244  000912  241B               	addwf	_d1,w,c
   245  000914  6EF6               	movwf	tblptrl,c
   246  000916  0E08               	movlw	high _bcd2seg
   247  000918  201C               	addwfc	_d1+1,w,c
   248  00091A  6EF7               	movwf	tblptrh,c
   249  00091C                     	if	0	;There are less than 3 active tblptr bytes
   250  00091C                     	endif
   251  00091C  0008               	tblrd		*
   252  00091E  CFF5 F01F          	movff	tablat,_disp1
   253                           
   254                           ;newmain.c: 107: disp2 = bcd2seg[d2];
   255  000922  0E01               	movlw	low _bcd2seg
   256  000924  2419               	addwf	_d2,w,c
   257  000926  6EF6               	movwf	tblptrl,c
   258  000928  0E08               	movlw	high _bcd2seg
   259  00092A  201A               	addwfc	_d2+1,w,c
   260  00092C  6EF7               	movwf	tblptrh,c
   261  00092E                     	if	0	;There are less than 3 active tblptr bytes
   262  00092E                     	endif
   263  00092E  0008               	tblrd		*
   264  000930  CFF5 F01E          	movff	tablat,_disp2
   265                           
   266                           ;newmain.c: 108: disp3 = bcd2seg[d3];
   267  000934  0E01               	movlw	low _bcd2seg
   268  000936  2417               	addwf	_d3,w,c
   269  000938  6EF6               	movwf	tblptrl,c
   270  00093A  0E08               	movlw	high _bcd2seg
   271  00093C  2018               	addwfc	_d3+1,w,c
   272  00093E  6EF7               	movwf	tblptrh,c
   273  000940                     	if	0	;There are less than 3 active tblptr bytes
   274  000940                     	endif
   275  000940  0008               	tblrd		*
   276  000942  CFF5 F01D          	movff	tablat,_disp3
   277                           
   278                           ;newmain.c: 112: d3++;
   279  000946  4A17               	infsnz	_d3,f,c
   280  000948  2A18               	incf	_d3+1,f,c
   281                           
   282                           ;newmain.c: 113: if (d3 == 10) {
   283  00094A  0E0A               	movlw	10
   284  00094C  1817               	xorwf	_d3,w,c
   285  00094E  1018               	iorwf	_d3+1,w,c
   286  000950  A4D8               	btfss	status,2,c
   287  000952  D01A               	goto	l48
   288                           
   289                           ;newmain.c: 114: d2++;
   290  000954  4A19               	infsnz	_d2,f,c
   291  000956  2A1A               	incf	_d2+1,f,c
   292                           
   293                           ;newmain.c: 115: d3 = 0;
   294  000958  0E00               	movlw	0
   295  00095A  6E18               	movwf	_d3+1,c
   296  00095C  0E00               	movlw	0
   297  00095E  6E17               	movwf	_d3,c
   298                           
   299                           ;newmain.c: 116: if (d2 == 10) {
   300  000960  0E0A               	movlw	10
   301  000962  1819               	xorwf	_d2,w,c
   302  000964  101A               	iorwf	_d2+1,w,c
   303  000966  A4D8               	btfss	status,2,c
   304  000968  D00F               	goto	l48
   305                           
   306                           ;newmain.c: 117: d1++;
   307  00096A  4A1B               	infsnz	_d1,f,c
   308  00096C  2A1C               	incf	_d1+1,f,c
   309                           
   310                           ;newmain.c: 118: d2 = 0;
   311  00096E  0E00               	movlw	0
   312  000970  6E1A               	movwf	_d2+1,c
   313  000972  0E00               	movlw	0
   314  000974  6E19               	movwf	_d2,c
   315                           
   316                           ;newmain.c: 119: if (d1 == 10) {
   317  000976  0E0A               	movlw	10
   318  000978  181B               	xorwf	_d1,w,c
   319  00097A  101C               	iorwf	_d1+1,w,c
   320  00097C  A4D8               	btfss	status,2,c
   321  00097E  D004               	goto	l48
   322                           
   323                           ;newmain.c: 120: d1 = 0;
   324  000980  0E00               	movlw	0
   325  000982  6E1C               	movwf	_d1+1,c
   326  000984  0E00               	movlw	0
   327  000986  6E1B               	movwf	_d1,c
   328  000988                     l48:
   329                           
   330                           ;newmain.c: 121: }
   331                           ;newmain.c: 122: }
   332                           ;newmain.c: 123: }
   333                           ;newmain.c: 124: _delay((unsigned long)((1000)*(4000000/4000.0)));
   334  000988  0E06               	movlw	6
   335  00098A  6E14               	movwf	(??_main+1)& (0+255),c
   336  00098C  0E13               	movlw	19
   337  00098E  6E13               	movwf	??_main& (0+255),c
   338  000990  0EAE               	movlw	174
   339  000992                     u87:
   340  000992  2EE8               	decfsz	wreg,f,c
   341  000994  D7FE               	bra	u87
   342  000996  2E13               	decfsz	??_main& (0+255),f,c
   343  000998  D7FC               	bra	u87
   344  00099A  2E14               	decfsz	(??_main+1)& (0+255),f,c
   345  00099C  D7FA               	bra	u87
   346  00099E  D7B8               	goto	l45
   347  0009A0                     __end_of_main:
   348                           	opt stack 0
   349                           tblptru	equ	0xFF8
   350                           tblptrh	equ	0xFF7
   351                           tblptrl	equ	0xFF6
   352                           tablat	equ	0xFF5
   353                           intcon	equ	0xFF2
   354                           postinc0	equ	0xFEE
   355                           wreg	equ	0xFE8
   356                           status	equ	0xFD8
   357                           
   358 ;; *************** function _rotina_interrup *****************
   359 ;; Defined at:
   360 ;;		line 128 in file "newmain.c"
   361 ;; Parameters:    Size  Location     Type
   362 ;;		None
   363 ;; Auto vars:     Size  Location     Type
   364 ;;		None
   365 ;; Return value:  Size  Location     Type
   366 ;;                  1    wreg      void 
   367 ;; Registers used:
   368 ;;		wreg, status,2, status,0
   369 ;; Tracked objects:
   370 ;;		On entry : 0/0
   371 ;;		On exit  : 0/0
   372 ;;		Unchanged: 0/0
   373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   374 ;;      Params:         0       0       0       0       0       0       0       0       0
   375 ;;      Locals:         0       0       0       0       0       0       0       0       0
   376 ;;      Temps:         18       0       0       0       0       0       0       0       0
   377 ;;      Totals:        18       0       0       0       0       0       0       0       0
   378 ;;Total ram usage:       18 bytes
   379 ;; Hardware stack levels used:    1
   380 ;; This function calls:
   381 ;;		Nothing
   382 ;; This function is called by:
   383 ;;		Interrupt level 2
   384 ;; This function uses a non-reentrant model
   385 ;;
   386                           
   387                           	psect	intcode
   388  000008                     __pintcode:
   389                           	opt stack 0
   390  000008                     _rotina_interrup:
   391                           	opt stack 30
   392                           
   393                           ;incstack = 0
   394  000008  8220               	bsf	btemp,1,c	;set compiler interrupt flag (level 2)
   395  00000A  ED06  F004         	call	int_func,f	;refresh shadow registers
   396                           tblptru	equ	0xFF8
   397                           tblptrh	equ	0xFF7
   398                           tblptrl	equ	0xFF6
   399                           tablat	equ	0xFF5
   400                           intcon	equ	0xFF2
   401                           postinc0	equ	0xFEE
   402                           wreg	equ	0xFE8
   403                           status	equ	0xFD8
   404                           
   405                           	psect	intcode_body
   406  00080C                     __pintcode_body:
   407                           	opt stack 30
   408  00080C                     int_func:
   409                           	opt stack 30
   410  00080C  0006               	pop		; remove dummy address from shadow register refresh
   411  00080E  CFFA F001          	movff	pclath,??_rotina_interrup
   412  000812  CFFB F002          	movff	pclatu,??_rotina_interrup+1
   413  000816  CFE9 F003          	movff	fsr0l,??_rotina_interrup+2
   414  00081A  CFEA F004          	movff	fsr0h,??_rotina_interrup+3
   415  00081E  CFE1 F005          	movff	fsr1l,??_rotina_interrup+4
   416  000822  CFE2 F006          	movff	fsr1h,??_rotina_interrup+5
   417  000826  CFD9 F007          	movff	fsr2l,??_rotina_interrup+6
   418  00082A  CFDA F008          	movff	fsr2h,??_rotina_interrup+7
   419  00082E  CFF3 F009          	movff	prodl,??_rotina_interrup+8
   420  000832  CFF4 F00A          	movff	prodh,??_rotina_interrup+9
   421  000836  CFF6 F00B          	movff	tblptrl,??_rotina_interrup+10
   422  00083A  CFF7 F00C          	movff	tblptrh,??_rotina_interrup+11
   423  00083E  CFF8 F00D          	movff	tblptru,??_rotina_interrup+12
   424  000842  CFF5 F00E          	movff	tablat,??_rotina_interrup+13
   425  000846  C020  F00F         	movff	btemp,??_rotina_interrup+14
   426  00084A  C021  F010         	movff	btemp+1,??_rotina_interrup+15
   427  00084E  C022  F011         	movff	btemp+2,??_rotina_interrup+16
   428  000852  C023  F012         	movff	btemp+3,??_rotina_interrup+17
   429                           
   430                           ;newmain.c: 129: if (TMR2IF) {
   431  000856  A29E               	btfss	3998,1,c	;volatile
   432  000858  D023               	goto	i2l61
   433                           
   434                           ;newmain.c: 130: TMR2IF = 0;
   435  00085A  929E               	bcf	3998,1,c	;volatile
   436                           
   437                           ;newmain.c: 131: PORTDbits.RD0 = 1;
   438  00085C  8083               	bsf	3971,0,c	;volatile
   439                           
   440                           ;newmain.c: 132: PORTDbits.RD1 = 1;
   441  00085E  8283               	bsf	3971,1,c	;volatile
   442                           
   443                           ;newmain.c: 133: PORTDbits.RD2 = 1;
   444  000860  8483               	bsf	3971,2,c	;volatile
   445                           
   446                           ;newmain.c: 134: A++;
   447  000862  4A15               	infsnz	_A,f,c
   448  000864  2A16               	incf	_A+1,f,c
   449                           
   450                           ;newmain.c: 135: if (A == 1) {
   451  000866  0415               	decf	_A,w,c
   452  000868  1016               	iorwf	_A+1,w,c
   453  00086A  A4D8               	btfss	status,2,c
   454  00086C  D004               	goto	i2l57
   455                           
   456                           ;newmain.c: 136: PORTB = disp1;
   457  00086E  C01F  FF81         	movff	_disp1,3969	;volatile
   458                           
   459                           ;newmain.c: 137: PORTDbits.RD0 = 0;
   460  000872  9083               	bcf	3971,0,c	;volatile
   461                           
   462                           ;newmain.c: 138: } else if (A == 2) {
   463  000874  D015               	goto	i2l61
   464  000876                     i2l57:
   465  000876  0E02               	movlw	2
   466  000878  1815               	xorwf	_A,w,c
   467  00087A  1016               	iorwf	_A+1,w,c
   468  00087C  A4D8               	btfss	status,2,c
   469  00087E  D004               	goto	i2l59
   470                           
   471                           ;newmain.c: 139: PORTB = disp2;
   472  000880  C01E  FF81         	movff	_disp2,3969	;volatile
   473                           
   474                           ;newmain.c: 140: PORTDbits.RD1 = 0;
   475  000884  9283               	bcf	3971,1,c	;volatile
   476                           
   477                           ;newmain.c: 141: } else if (A == 3) {
   478  000886  D00C               	goto	i2l61
   479  000888                     i2l59:
   480  000888  0E03               	movlw	3
   481  00088A  1815               	xorwf	_A,w,c
   482  00088C  1016               	iorwf	_A+1,w,c
   483  00088E  A4D8               	btfss	status,2,c
   484  000890  D007               	goto	i2l61
   485                           
   486                           ;newmain.c: 142: PORTB = disp3;
   487  000892  C01D  FF81         	movff	_disp3,3969	;volatile
   488                           
   489                           ;newmain.c: 143: PORTDbits.RD2 = 0;
   490  000896  9483               	bcf	3971,2,c	;volatile
   491                           
   492                           ;newmain.c: 144: A = 0;
   493  000898  0E00               	movlw	0
   494  00089A  6E16               	movwf	_A+1,c
   495  00089C  0E00               	movlw	0
   496  00089E  6E15               	movwf	_A,c
   497  0008A0                     i2l61:
   498  0008A0  C012  F023         	movff	??_rotina_interrup+17,btemp+3
   499  0008A4  C011  F022         	movff	??_rotina_interrup+16,btemp+2
   500  0008A8  C010  F021         	movff	??_rotina_interrup+15,btemp+1
   501  0008AC  C00F  F020         	movff	??_rotina_interrup+14,btemp
   502  0008B0  C00E  FFF5         	movff	??_rotina_interrup+13,tablat
   503  0008B4  C00D  FFF8         	movff	??_rotina_interrup+12,tblptru
   504  0008B8  C00C  FFF7         	movff	??_rotina_interrup+11,tblptrh
   505  0008BC  C00B  FFF6         	movff	??_rotina_interrup+10,tblptrl
   506  0008C0  C00A  FFF4         	movff	??_rotina_interrup+9,prodh
   507  0008C4  C009  FFF3         	movff	??_rotina_interrup+8,prodl
   508  0008C8  C008  FFDA         	movff	??_rotina_interrup+7,fsr2h
   509  0008CC  C007  FFD9         	movff	??_rotina_interrup+6,fsr2l
   510  0008D0  C006  FFE2         	movff	??_rotina_interrup+5,fsr1h
   511  0008D4  C005  FFE1         	movff	??_rotina_interrup+4,fsr1l
   512  0008D8  C004  FFEA         	movff	??_rotina_interrup+3,fsr0h
   513  0008DC  C003  FFE9         	movff	??_rotina_interrup+2,fsr0l
   514  0008E0  C002  FFFB         	movff	??_rotina_interrup+1,pclatu
   515  0008E4  C001  FFFA         	movff	??_rotina_interrup,pclath
   516  0008E8  9220               	bcf	btemp,1,c	;clear compiler interrupt flag (level 2)
   517  0008EA  0011               	retfie		f
   518  0008EC                     __end_of_rotina_interrup:
   519                           	opt stack 0
   520                           pclatu	equ	0xFFB
   521                           pclath	equ	0xFFA
   522                           tblptru	equ	0xFF8
   523                           tblptrh	equ	0xFF7
   524                           tblptrl	equ	0xFF6
   525                           tablat	equ	0xFF5
   526                           prodh	equ	0xFF4
   527                           prodl	equ	0xFF3
   528                           intcon	equ	0xFF2
   529                           postinc0	equ	0xFEE
   530                           fsr0h	equ	0xFEA
   531                           fsr0l	equ	0xFE9
   532                           wreg	equ	0xFE8
   533                           fsr1h	equ	0xFE2
   534                           fsr1l	equ	0xFE1
   535                           fsr2h	equ	0xFDA
   536                           fsr2l	equ	0xFD9
   537                           status	equ	0xFD8
   538                           pclatu	equ	0xFFB
   539                           pclath	equ	0xFFA
   540                           tblptru	equ	0xFF8
   541                           tblptrh	equ	0xFF7
   542                           tblptrl	equ	0xFF6
   543                           tablat	equ	0xFF5
   544                           prodh	equ	0xFF4
   545                           prodl	equ	0xFF3
   546                           intcon	equ	0xFF2
   547                           postinc0	equ	0xFEE
   548                           fsr0h	equ	0xFEA
   549                           fsr0l	equ	0xFE9
   550                           wreg	equ	0xFE8
   551                           fsr1h	equ	0xFE2
   552                           fsr1l	equ	0xFE1
   553                           fsr2h	equ	0xFDA
   554                           fsr2l	equ	0xFD9
   555                           status	equ	0xFD8
   556                           
   557                           	psect	rparam
   558  0000                     pclatu	equ	0xFFB
   559                           pclath	equ	0xFFA
   560                           tblptru	equ	0xFF8
   561                           tblptrh	equ	0xFF7
   562                           tblptrl	equ	0xFF6
   563                           tablat	equ	0xFF5
   564                           prodh	equ	0xFF4
   565                           prodl	equ	0xFF3
   566                           intcon	equ	0xFF2
   567                           postinc0	equ	0xFEE
   568                           fsr0h	equ	0xFEA
   569                           fsr0l	equ	0xFE9
   570                           wreg	equ	0xFE8
   571                           fsr1h	equ	0xFE2
   572                           fsr1l	equ	0xFE1
   573                           fsr2h	equ	0xFDA
   574                           fsr2l	equ	0xFD9
   575                           status	equ	0xFD8
   576                           
   577                           	psect	temp
   578  000020                     btemp:
   579                           	opt stack 0
   580  000020                     	ds	1
   581  0000                     int$flags	set	btemp
   582  0000                     wtemp6	set	btemp+1
   583                           pclatu	equ	0xFFB
   584                           pclath	equ	0xFFA
   585                           tblptru	equ	0xFF8
   586                           tblptrh	equ	0xFF7
   587                           tblptrl	equ	0xFF6
   588                           tablat	equ	0xFF5
   589                           prodh	equ	0xFF4
   590                           prodl	equ	0xFF3
   591                           intcon	equ	0xFF2
   592                           postinc0	equ	0xFEE
   593                           fsr0h	equ	0xFEA
   594                           fsr0l	equ	0xFE9
   595                           wreg	equ	0xFE8
   596                           fsr1h	equ	0xFE2
   597                           fsr1l	equ	0xFE1
   598                           fsr2h	equ	0xFDA
   599                           fsr2l	equ	0xFD9
   600                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    10
    Data        0
    BSS         8
    Persistent  3
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     20      31
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    None.

Critical Paths under _rotina_interrup in COMRAM

    None.

Critical Paths under _main in BANK0

    None.

Critical Paths under _rotina_interrup in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _rotina_interrup in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _rotina_interrup in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _rotina_interrup in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _rotina_interrup in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _rotina_interrup in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _rotina_interrup in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Critical Paths under _rotina_interrup in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0       0
                                             18 COMRAM     2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 0
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (1) _rotina_interrup                                     18    18      0       0
                                              0 COMRAM    18    18      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)

 _rotina_interrup (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     14      1F       1       33.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0      1F      20        0.0%
DATA                 0      0      1F       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.44 build -154322312 
Symbol Table                                                                                   Sat Nov 18 05:10:04 2017

                       _A 0015                        l45 0910                        l48 0988  
                      _d1 001B                        _d2 0019                        _d3 0017  
                      u87 0992               __CFG_BOR$ON 000000               __CFG_BORV$3 000000  
            __CFG_CP0$OFF 000000              __CFG_CP1$OFF 000000              __CFG_CP2$OFF 000000  
            __CFG_CP3$OFF 000000               __CFG_LVP$ON 000000                       _GIE 007F97  
            __CFG_CPB$OFF 000000                       _PR2 000FCB              __CFG_CPD$OFF 000000  
                     wreg 000FE8              __CFG_WDT$OFF 000000                      _PEIE 007F96  
                    i2l61 08A0                      i2l57 0876                      i2l59 0888  
                    _main 08EC                      fsr0h 000FEA                      fsr1h 000FE2  
                    fsr2h 000FDA                      fsr0l 000FE9                      fsr1l 000FE1  
                    fsr2l 000FD9                      btemp 0020                      prodh 000FF4  
                    prodl 000FF3                      start 000E             __CFG_IESO$OFF 000000  
           __CFG_MCLRE$ON 000000              ___param_bank 000000         ??_rotina_interrup 0001  
           __CFG_PLLDIV$1 000000            __CFG_CCP2MX$ON 000000           __end_of_bcd2seg 080B  
                   ?_main 0001                     _PORTB 000F81             __CFG_USBDIV$1 000000  
                   _TRISB 000F93                     _TRISD 000F95             __CFG_PWRT$OFF 000000  
           __CFG_WRT0$OFF 000000             __CFG_WRT1$OFF 000000             __CFG_WRT2$OFF 000000  
           __CFG_WRT3$OFF 000000            __CFG_EBTR0$OFF 000000            __CFG_FCMEN$OFF 000000  
          __CFG_EBTR1$OFF 000000            __CFG_EBTR2$OFF 000000            __CFG_EBTR3$OFF 000000  
           __CFG_WRTB$OFF 000000             __CFG_WRTC$OFF 000000             __CFG_WRTD$OFF 000000  
          __CFG_EBTRB$OFF 000000                     _disp1 001F                     _disp2 001E  
                   _disp3 001D                     pclath 000FFA                     tablat 000FF5  
                   status 000FD8                     wtemp6 0021            __CFG_ICPRT$OFF 000000  
         __initialization 09A0              __end_of_main 09A0                    ??_main 0013  
           __activetblptr 000001                    _TMR2IE 007CE9                    _TMR2IF 007CF1  
                  _TMR2ON 007E52            __CFG_XINST$OFF 000000            __CFG_STVREN$ON 000000  
                  clear_0 09A6              __mediumconst 0000                    tblptrh 000FF7  
                  tblptrl 000FF6                    tblptru 000FF8                __accesstop 0060  
 __end_of__initialization 09AC           __CFG_PBADEN$OFF 000000           __CFG_FOSC$XT_XT 000000  
           ___rparam_used 000001            __pcstackCOMRAM 0001           _rotina_interrup 0008  
              __pnvCOMRAM 001D           __CFG_VREGEN$OFF 000000                   __Hparam 0000  
                 __Lparam 0000                   _bcd2seg 0801              __psmallconst 0800  
                 __pcinit 09A0                   __ramtop 0800                   __ptext0 08EC  
               _T2CONbits 000FCA   __end_of_rotina_interrup 08EC            __pintcode_body 080C  
    end_of_initialization 09AC                   int_func 080C                   postinc0 000FEE  
               _PORTDbits 000F83       start_initialization 09A0          ?_rotina_interrup 0001  
        __CFG_LPT1OSC$OFF 000000               __pbssCOMRAM 0015                 __pintcode 0008  
             __smallconst 0800          __CFG_WDTPS$32768 000000                  __Hrparam 0000  
                __Lrparam 0000              __Lsmallconst 0800             __size_of_main 00B4  
                int$flags 0020     __CFG_CPUDIV$OSC1_PLL2 000000                  intlevel2 0000  
__size_of_rotina_interrup 08E4  
